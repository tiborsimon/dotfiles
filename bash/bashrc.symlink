export PATH="/Library/Frameworks/Python.framework/Versions/3.4/bin:~/github/dotfiles-osx/bin:${PATH}"

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export EDITOR='atom'
export PROJECTS='github'

export VIRTUAL_ENV_DISABLE_PROMPT=1
PROMPT_GIT_INTEGRATION=true

source $HOME/.dotfiles/functions/commons

# ==============================================================================
#  A L I A S E S
#

alias dot='cd ~/.dotfiles'
alias site='cd ~/github/tiborsimon.io && source site-env/bin/activate && clear'
alias buspirate='screen /dev/tty.usbserial-AD01W63E 115200 8N1'
alias c='cd ~/$PROJECTS'
alias pubkey="more ~/.ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to pasteboard.'"

alias appserver='ssh tibor@ts-centos-02'
alias proxyserver='ssh tibor@ts-centos-01'

#alias ls='ls -lahpTG'

alias gs='git status'
alias ga='git add --all'
alias ..='cd ..'

function commitFunction {
  git commit -m $1
}
alias gc=commitFunction

function cloneFunction {
  cd ~/$PROJECTS
  git clone $1
  cd $(python -c "import re, sys; m=re.search('([-\w]+)\.git', sys.argv[1]); print(m.group(1))" $1)
}
alias gclone=cloneFunction

alias g='cd ~/github'


# ==============================================================================
#  G I T   P R O M P T
#  Source: https://coderwall.com/p/pn8f0g/show-your-git-status-and-branch-in-color-at-the-command-prompt

function git_branch {
  local git_status="$(git status 2> /dev/null)"

  if [[ $git_status =~ "fatal: Not a git repository" ]]; then
    echo -en ${RESET}
  elif [[ $git_status =~ "Your branch is ahead of" ]]; then
    echo -en ${YELLOW}
  elif [[ $git_status =~ "nothing to commit" ]]; then
    echo -en ${GREEN}
  else
    echo -en ${RED}
  fi

  local on_branch="On branch ([^${IFS}]*)"
  local on_commit="HEAD detached at ([^${IFS}]*)"

  if [[ $git_status =~ $on_branch ]]; then
    local branch=${BASH_REMATCH[1]}
    echo -n " [$branch]"
  elif [[ $git_status =~ $on_commit ]]; then
    local commit=${BASH_REMATCH[1]}
    echo -n " [$commit]"
  fi

  echo -en ${RESET}
}

# http://stackoverflow.com/a/20026992
function virtualenv_info(){
    # Get Virtual Env
    if [[ -n "$VIRTUAL_ENV" ]]; then
        # Strip out the path and just leave the env name
        venv="[${VIRTUAL_ENV##*/}] "
    else
        # In case you don't have one activated
        venv=''
    fi
    echo -en ${YELLOW}
    [[ -n "$venv" ]] && echo -en "$venv"
    echo -en ${RESET}
}

function system_status_face {
  if [ $? -eq 0 ]
  then 
   echo -en "${BOLD}${GREEN}^-^${RESET}"
  else
   echo -en "${BOLD}${RED}O.o${RESET}"
  fi
}

if [ "$PROMPT_GIT_INTEGRATION" = true ]
then
  export PS1="\n[\[\$(system_status_face)\]] [\u@\h: \w]\$(git_branch)\n\$(virtualenv_info)[\$(printf "%03d" \#)] → "
else
  export PS1="\n[\[\$(system_status_face)\]] [\u@\h: \w]\n\$(virtualenv_info)[\$(printf "%03d" \#)] → "
fi


export PATH="/opt/local/bin:/opt/local/sbin:$PATH:$HOME/.dotfiles/bin"
export PATH="$PATH:"/Applications/microchip/xc8/v1.36/bin""

