#!/bin/sh
#
# This script will install the full configuration of the tiborsimon/dotfiles repo. 
# It will use a symlinked solution: it will symlink the configuration files located in 
# the .dotfiles folder's subfolders. With this approach, you will be able to separate
# the configurations from each others.
#
# This script can be used if you already have cloned the dotfiles repo, but you want to update
# to the latest version.
#
# To be able to use this file, you have to fill out the global variables below.
#
# Usage: run the script from the ~/.dotfiles folder.

LINUX_PACKAGE_MANAGER=yum

set -e
source functions/commons

#----------------------------------------------------------------------------------------
#  C O M M O N   F U N C T I O N S
#----------------------------------------------------------------------------------------

is_osx () {
  local system=
  if [ $(uname -s) = 'Darwin' ]
  then
    return 0 
  else
    return 1
  fi
}

install_dotfiles () {
  info 'Installing dotfiles..'

  local overwrite_all=false backup_all=false skip_all=false

  for src in $(find -H "$HOME/.dotfiles" -maxdepth 2 -name '*.symlink' -not -path '*.git*'); do
    dst="$HOME/.$(basename "${src%.*}")"
    link_file "$src" "$dst"
  done
}

install_vimplug () {
  info 'Installing VimPlug..'
  curl -sSfLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  success 'VimPlug installed!'
}

#----------------------------------------------------------------------------------------
#  O S X   R E L A T E D   F U N C T I O N S
#----------------------------------------------------------------------------------------

set_up_osx () {
  info 'Configuring OSX..'
  source osx/set-defaults.sh
  success 'OSX configured!'
}

install_homebrew () {
  if test ! $(which brew); then
    info 'Installing Homebrew..'
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  else
    success 'Homebrew is installed!'
  fi
}

update_homebrew () {
  user "Do you want to update Homebrew?  [${BOLD}${GREEN}y${RESET}]es, [${BOLD}${GREEN}s${RESET}]kip"
  read -n 1 action

  case "$action" in
  y ) info 'Updating Homebrew..'
      if brew update > brew-update.log; then
        success 'Homebrew is up-to-date!'
      else
        fail 'Error during Homebrew update!'
      fi
      ;;
  * ) success 'Skipped..'
      ;;
  esac
}

excute_brewfile () {
  user "Do you want to execute the Brewfile to install all your programs?  [${BOLD}${GREEN}y${RESET}]es, [${BOLD}${GREEN}s${RESET}]kip"
  read -n 1 action

  case "$action" in
  y ) info 'Executing Brewfile..'
      brew bundle -v  --file=brew/Brewfile > brew-install.log
      success 'Brewfile executed. All apps are installed.'
      ;;
  * ) success 'Skipped..'
      ;;
  esac
}

#----------------------------------------------------------------------------------------
#  L I N U X   R E L A T E D   F U N C T I O N S
#----------------------------------------------------------------------------------------

excute_linux_packages_file () {
  user "Do you want to install software packages?  [${BOLD}${GREEN}y${RESET}]es, [${BOLD}${GREEN}s${RESET}]kip"
  read -n 1 action
  case "$action" in
  y ) user 'What is the package manager for this platform?'
      read -e LINUX_PACKAGE_MANAGER
      for app in $(cat $HOME/.dotfiles/linux/packages.txt); do 
        info "Installing $app.."
        if sudo $LINUX_PACKAGE_MANAGER install -y $app>pof 2>&1; then
          success "$app installed."
        else
          warning "$app installation failed! Error: \n$(cat pof)"
        fi
        rm -f pof
      done
      success 'Done'
      ;;
  * ) success 'Skipped..'
      ;;
  esac
}

#----------------------------------------------------------------------------------------
#  F U N C T I O N S   C A L L S
#----------------------------------------------------------------------------------------

if is_osx; then
  info "Installing OS X related config"
  install_dotfiles
  set_up_osx
  install_homebrew
  update_homebrew
  excute_brewfile
  install_vimplug
else
  info "Installing Linux related config"
  install_dotfiles
  excute_linux_packages_file
  install_vimplug
fi

success 'Dotfiles has been deployed.'

